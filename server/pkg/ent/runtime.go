// Code generated by ent, DO NOT EDIT.

package ent

import (
	"server/pkg/ent/label"
	"server/pkg/ent/schema"
	"server/pkg/ent/todo"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	labelFields := schema.Label{}.Fields()
	_ = labelFields
	// labelDescCreatedAt is the schema descriptor for created_at field.
	labelDescCreatedAt := labelFields[1].Descriptor()
	// label.DefaultCreatedAt holds the default value on creation for the created_at field.
	label.DefaultCreatedAt = labelDescCreatedAt.Default.(func() time.Time)
	// labelDescUpdatedAt is the schema descriptor for updated_at field.
	labelDescUpdatedAt := labelFields[2].Descriptor()
	// label.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	label.DefaultUpdatedAt = labelDescUpdatedAt.Default.(func() time.Time)
	// label.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	label.UpdateDefaultUpdatedAt = labelDescUpdatedAt.UpdateDefault.(func() time.Time)
	todoFields := schema.Todo{}.Fields()
	_ = todoFields
	// todoDescCreatedAt is the schema descriptor for created_at field.
	todoDescCreatedAt := todoFields[6].Descriptor()
	// todo.DefaultCreatedAt holds the default value on creation for the created_at field.
	todo.DefaultCreatedAt = todoDescCreatedAt.Default.(func() time.Time)
	// todoDescUpdatedAt is the schema descriptor for updated_at field.
	todoDescUpdatedAt := todoFields[7].Descriptor()
	// todo.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	todo.DefaultUpdatedAt = todoDescUpdatedAt.Default.(func() time.Time)
	// todo.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	todo.UpdateDefaultUpdatedAt = todoDescUpdatedAt.UpdateDefault.(func() time.Time)
}
