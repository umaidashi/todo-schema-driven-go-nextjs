// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"time"
)

// Ref: #/components/schemas/BadRequest
type BadRequest struct {
	GlobalErrors []string                    `json:"globalErrors"`
	FieldErrors  []BadRequestFieldErrorsItem `json:"fieldErrors"`
}

// GetGlobalErrors returns the value of GlobalErrors.
func (s *BadRequest) GetGlobalErrors() []string {
	return s.GlobalErrors
}

// GetFieldErrors returns the value of FieldErrors.
func (s *BadRequest) GetFieldErrors() []BadRequestFieldErrorsItem {
	return s.FieldErrors
}

// SetGlobalErrors sets the value of GlobalErrors.
func (s *BadRequest) SetGlobalErrors(val []string) {
	s.GlobalErrors = val
}

// SetFieldErrors sets the value of FieldErrors.
func (s *BadRequest) SetFieldErrors(val []BadRequestFieldErrorsItem) {
	s.FieldErrors = val
}

func (*BadRequest) todoGetRes() {}

type BadRequestFieldErrorsItem struct {
	Field    string   `json:"field"`
	Messages []string `json:"messages"`
}

// GetField returns the value of Field.
func (s *BadRequestFieldErrorsItem) GetField() string {
	return s.Field
}

// GetMessages returns the value of Messages.
func (s *BadRequestFieldErrorsItem) GetMessages() []string {
	return s.Messages
}

// SetField sets the value of Field.
func (s *BadRequestFieldErrorsItem) SetField(val string) {
	s.Field = val
}

// SetMessages sets the value of Messages.
func (s *BadRequestFieldErrorsItem) SetMessages(val []string) {
	s.Messages = val
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Priority
type Priority struct {
	Name    string `json:"name"`
	Label   string `json:"label"`
	Color   string `json:"color"`
	BgColor string `json:"bgColor"`
}

// GetName returns the value of Name.
func (s *Priority) GetName() string {
	return s.Name
}

// GetLabel returns the value of Label.
func (s *Priority) GetLabel() string {
	return s.Label
}

// GetColor returns the value of Color.
func (s *Priority) GetColor() string {
	return s.Color
}

// GetBgColor returns the value of BgColor.
func (s *Priority) GetBgColor() string {
	return s.BgColor
}

// SetName sets the value of Name.
func (s *Priority) SetName(val string) {
	s.Name = val
}

// SetLabel sets the value of Label.
func (s *Priority) SetLabel(val string) {
	s.Label = val
}

// SetColor sets the value of Color.
func (s *Priority) SetColor(val string) {
	s.Color = val
}

// SetBgColor sets the value of BgColor.
func (s *Priority) SetBgColor(val string) {
	s.BgColor = val
}

// Ref: #/components/schemas/ServerError
type ServerError struct {
	GlobalErrors []string `json:"globalErrors"`
}

// GetGlobalErrors returns the value of GlobalErrors.
func (s *ServerError) GetGlobalErrors() []string {
	return s.GlobalErrors
}

// SetGlobalErrors sets the value of GlobalErrors.
func (s *ServerError) SetGlobalErrors(val []string) {
	s.GlobalErrors = val
}

func (*ServerError) todoGetRes() {}

// Ref: #/components/schemas/TodoBase
type TodoBase struct {
	ID          int         `json:"id"`
	Title       string      `json:"title"`
	Description string      `json:"description"`
	StartAt     time.Time   `json:"start_at"`
	EndAt       OptDateTime `json:"end_at"`
	Priority    Priority    `json:"priority"`
	Status      TodoStatus  `json:"status"`
}

// GetID returns the value of ID.
func (s *TodoBase) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *TodoBase) GetTitle() string {
	return s.Title
}

// GetDescription returns the value of Description.
func (s *TodoBase) GetDescription() string {
	return s.Description
}

// GetStartAt returns the value of StartAt.
func (s *TodoBase) GetStartAt() time.Time {
	return s.StartAt
}

// GetEndAt returns the value of EndAt.
func (s *TodoBase) GetEndAt() OptDateTime {
	return s.EndAt
}

// GetPriority returns the value of Priority.
func (s *TodoBase) GetPriority() Priority {
	return s.Priority
}

// GetStatus returns the value of Status.
func (s *TodoBase) GetStatus() TodoStatus {
	return s.Status
}

// SetID sets the value of ID.
func (s *TodoBase) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *TodoBase) SetTitle(val string) {
	s.Title = val
}

// SetDescription sets the value of Description.
func (s *TodoBase) SetDescription(val string) {
	s.Description = val
}

// SetStartAt sets the value of StartAt.
func (s *TodoBase) SetStartAt(val time.Time) {
	s.StartAt = val
}

// SetEndAt sets the value of EndAt.
func (s *TodoBase) SetEndAt(val OptDateTime) {
	s.EndAt = val
}

// SetPriority sets the value of Priority.
func (s *TodoBase) SetPriority(val Priority) {
	s.Priority = val
}

// SetStatus sets the value of Status.
func (s *TodoBase) SetStatus(val TodoStatus) {
	s.Status = val
}

func (*TodoBase) todoGetRes() {}

// Ref: #/components/schemas/TodoStatus
type TodoStatus struct {
	Name    string `json:"name"`
	Label   string `json:"label"`
	Color   string `json:"color"`
	BgColor string `json:"bgColor"`
}

// GetName returns the value of Name.
func (s *TodoStatus) GetName() string {
	return s.Name
}

// GetLabel returns the value of Label.
func (s *TodoStatus) GetLabel() string {
	return s.Label
}

// GetColor returns the value of Color.
func (s *TodoStatus) GetColor() string {
	return s.Color
}

// GetBgColor returns the value of BgColor.
func (s *TodoStatus) GetBgColor() string {
	return s.BgColor
}

// SetName sets the value of Name.
func (s *TodoStatus) SetName(val string) {
	s.Name = val
}

// SetLabel sets the value of Label.
func (s *TodoStatus) SetLabel(val string) {
	s.Label = val
}

// SetColor sets the value of Color.
func (s *TodoStatus) SetColor(val string) {
	s.Color = val
}

// SetBgColor sets the value of BgColor.
func (s *TodoStatus) SetBgColor(val string) {
	s.BgColor = val
}
